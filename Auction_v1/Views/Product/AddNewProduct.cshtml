@model Auction_v1.Models.tblProduct

@{
    ViewBag.Title = "AddNewProduct";

    List<SelectListItem> items = new List<SelectListItem>();

    items.Add(new SelectListItem { Text = "Select a Category", Value = "", Selected = true });

    items.Add(new SelectListItem { Text = "Furniture", Value = "Furniture" });

    items.Add(new SelectListItem { Text = "Tech", Value = "Tech" });

    items.Add(new SelectListItem { Text = "Clothing", Value = "Clothing" });

    items.Add(new SelectListItem { Text = "Automobile", Value = "Automobile" });
}

<h2>Auction Item</h2>
Welcome @HttpContext.Current.User.Identity.Name

@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("Logout", "Account", FormMethod.Post, new { id = "logoutForm" }))
    {
        <a href="javascript:document.getElementById('logoutForm').submit()">Logout</a>
    }
}


@using (Html.BeginForm("AddNewProduct","Product",FormMethod.Post, new {enctype="multipart/form-data",onsubmit="return AjaxPost(this)",id="AddNewProduct"})) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductCategory, items, htmlAttributes: new { @class = "btn btn-default dropdown-toggle" })
                @Html.ValidationMessageFor(model => model.ProductCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PicUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.PicUrl, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="file" name="ImageUpload" id="ImageUpload" accept=".jpg,.jpeg,.png,.gif" onchange="showMyImage(this)" />
                <img id="thumbnil" class="center-block" style="width: 50%; margin-top: 10px;" src="@Url.Content("~/Assets/img/contactpic.png")" alt="image"/>
                @Html.ValidationMessageFor(model => model.PicUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductClose, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductClose, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductClose, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts
{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

<script type="text/javascript">
    function showMyImage(fileInput) {
        var files = fileInput.files;
        for (var i = 0; i < files.length; i++) {
            var file = files[i];
            var imageType = /image.*/;
            if (!file.type.match(imageType)) {
                continue;
            }
            var img = document.getElementById("thumbnil");
            img.file = file;
            var reader = new FileReader();
            reader.onload = (function (aImg) {
                return function (e) {
                    aImg.src = e.target.result;
                };
            })(img);
            reader.readAsDataURL(file);
        }
    }
</script>
<script>
    function AjaxPost(formData) {
        var ajaxConfig = {
            type: "post",
            url: "/Product/SaveData",
            data: new FormData(formData),
            success: function(result) {
                alert(result);
                window.location.href ="/Product/AddNewProduct"
            }
        }
        if ($(formData).attr('enctype') == "multipart/form-data") {
            ajaxConfig["contentType"] = false;
            ajaxConfig["processData"] = false;
        }

        $.ajax(ajaxConfig);
        return false;
    }
</script>